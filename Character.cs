// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RPG.GameServer/Protos/character.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RPG.GameServer.Protos {

  /// <summary>Holder for reflection information generated from RPG.GameServer/Protos/character.proto</summary>
  public static partial class CharacterReflection {

    #region Descriptor
    /// <summary>File descriptor for RPG.GameServer/Protos/character.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CharacterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVSUEcuR2FtZVNlcnZlci9Qcm90b3MvY2hhcmFjdGVyLnByb3RvEgNycGci",
            "lAIKBVN0YXRzEhAKCHN0cmVuZ3RoGAEgASgFEg8KB2FnaWxpdHkYAiABKAUS",
            "FAoMaW50ZWxsaWdlbmNlGAMgASgFEg4KBndpc2RvbRgEIAEoBRIRCglkZXh0",
            "ZXJpdHkYBSABKAUSEAoIdml0YWxpdHkYBiABKAUSEwoLbWFnaWNSZXNpc3QY",
            "ByABKAUSFAoMbmF0dXJlUmVzaXN0GAggASgFEhQKDG1pc3RpY1Jlc2lzdBgJ",
            "IAEoBRINCgVhcm1vchgKIAEoBRISCgpjcml0Q2hhbmNlGAsgASgFEhEKCWhp",
            "dENoYW5jZRgMIAEoBRITCgthdHRhY2tTcGVlZBgNIAEoBRIRCgltb3ZlU3Bl",
            "ZWQYDiABKAUiswEKBEl0ZW0SCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRIb",
            "CgR0eXBlGAMgASgOMg0ucnBnLkl0ZW1UeXBlEisKCW1vZGlmaWVycxgEIAMo",
            "CzIYLnJwZy5JdGVtLk1vZGlmaWVyc0VudHJ5EhUKDXJlcXVpcmVkTGV2ZWwY",
            "BSABKAUaMAoOTW9kaWZpZXJzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVl",
            "GAIgASgFOgI4ASLjAQoORXF1aXBtZW50U2xvdHMSFwoEaGVhZBgBIAEoCzIJ",
            "LnJwZy5JdGVtEhgKBWNoZXN0GAIgASgLMgkucnBnLkl0ZW0SGQoGd2VhcG9u",
            "GAMgASgLMgkucnBnLkl0ZW0SGQoGc2hpZWxkGAQgASgLMgkucnBnLkl0ZW0S",
            "GAoFYm9vdHMYBSABKAsyCS5ycGcuSXRlbRIZCgZnbG92ZXMYBiABKAsyCS5y",
            "cGcuSXRlbRIYCgVyaW5ncxgHIAMoCzIJLnJwZy5JdGVtEhkKBmFtdWxldBgI",
            "IAEoCzIJLnJwZy5JdGVtIvsCCg1CYXNlQ2hhcmFjdGVyEgoKAmlkGAEgASgJ",
            "EgwKBG5hbWUYAiABKAkSDQoFbGV2ZWwYAyABKAUSEQoJbWF4SGVhbHRoGAQg",
            "ASgFEhUKDWN1cnJlbnRIZWFsdGgYBSABKAUSDwoHbWF4TWFuYRgGIAEoBRIT",
            "CgtjdXJyZW50TWFuYRgHIAEoBRIZCgVzdGF0cxgIIAEoCzIKLnJwZy5TdGF0",
            "cxIaCgZza2lsbHMYCSADKAsyCi5ycGcuU2tpbGwSPgoOc2tpbGxDb29sZG93",
            "bnMYCiADKAsyJi5ycGcuQmFzZUNoYXJhY3Rlci5Ta2lsbENvb2xkb3duc0Vu",
            "dHJ5Eh8KCHBvc2l0aW9uGAsgASgLMg0ucnBnLkxvY2F0aW9uEiIKDWFjdGl2",
            "ZUVmZmVjdHMYDCADKA4yCy5ycGcuRWZmZWN0GjUKE1NraWxsQ29vbGRvd25z",
            "RW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgJOgI4ASKUAgoFU2tp",
            "bGwSCgoCaWQYASABKAUSDAoEbmFtZRgCIAEoCRIcCgR0eXBlGAMgASgOMg4u",
            "cnBnLlNraWxsVHlwZRIQCghtYW5hQ29zdBgEIAEoBRIXCg9jb29sZG93blNl",
            "Y29uZHMYBSABKAISFQoNcmVxdWlyZWRMZXZlbBgGIAEoBRINCgVwb3dlchgH",
            "IAEoBRINCgVyYW5nZRgIIAEoAhIXCg9kdXJhdGlvblNlY29uZHMYCSABKAIS",
            "GQoRZWZmZWN0RGVzY3JpcHRpb24YCiABKAkSIwoOYXBwbGllZEVmZmVjdHMY",
            "CyADKA4yCy5ycGcuRWZmZWN0EhoKEmNhbkNhc3RXaGlsZU1vdmluZxgMIAEo",
            "CCIrCghMb2NhdGlvbhIJCgF4GAEgASgBEgkKAXkYAiABKAESCQoBehgDIAEo",
            "ASKyAgoPUGxheWVyQ2hhcmFjdGVyEikKDWJhc2VDaGFyYWN0ZXIYASABKAsy",
            "Ei5ycGcuQmFzZUNoYXJhY3RlchImCgllcXVpcG1lbnQYAiABKAsyEy5ycGcu",
            "RXF1aXBtZW50U2xvdHMSHAoJaW52ZW50b3J5GAMgAygLMgkucnBnLkl0ZW0S",
            "OgoLc2tpbGxMZXZlbHMYBCADKAsyJS5ycGcuUGxheWVyQ2hhcmFjdGVyLlNr",
            "aWxsTGV2ZWxzRW50cnkSEQoJc2Vzc2lvbklkGAUgASgJEisKDmNoYXJhY3Rl",
            "ckNsYXNzGAYgASgOMhMucnBnLkNoYXJhY3RlckNsYXNzGjIKEFNraWxsTGV2",
            "ZWxzRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASI7ChBD",
            "aGFyYWN0ZXJSZXF1ZXN0EicKCWNoYXJhY3RlchgBIAEoCzIULnJwZy5QbGF5",
            "ZXJDaGFyYWN0ZXIiKQoSQ2hhcmFjdGVySWRSZXF1ZXN0EhMKC2NoYXJhY3Rl",
            "cklkGAEgASgJIjkKDkNoYXJhY3RlclJlcGx5EicKCWNoYXJhY3RlchgBIAEo",
            "CzIULnJwZy5QbGF5ZXJDaGFyYWN0ZXIiIwoQQ2hhcmFjdGVySWRSZXBseRIP",
            "CgdzdWNjZXNzGAEgASgIInIKDVByb3RvYnVmU2tpbGwSCgoCaWQYASABKAUS",
            "DAoEbmFtZRgCIAEoCRIcCgR0eXBlGAMgASgOMg4ucnBnLlNraWxsVHlwZRIQ",
            "CghtYW5hQ29zdBgEIAEoBRIXCg9jb29sZG93blNlY29uZHMYBSABKAIi6wEK",
            "FlByb3RvYnVmRXF1aXBtZW50U2xvdHMSFwoEaGVhZBgBIAEoCzIJLnJwZy5J",
            "dGVtEhgKBWNoZXN0GAIgASgLMgkucnBnLkl0ZW0SGQoGd2VhcG9uGAMgASgL",
            "MgkucnBnLkl0ZW0SGQoGc2hpZWxkGAQgASgLMgkucnBnLkl0ZW0SGAoFYm9v",
            "dHMYBSABKAsyCS5ycGcuSXRlbRIZCgZnbG92ZXMYBiABKAsyCS5ycGcuSXRl",
            "bRIYCgVyaW5ncxgHIAMoCzIJLnJwZy5JdGVtEhkKBmFtdWxldBgIIAEoCzIJ",
            "LnJwZy5JdGVtKlQKCEl0ZW1UeXBlEgoKBldFQVBPThAAEgkKBUFSTU9SEAES",
            "DgoKQ09OU1VNQUJMRRACEg4KClFVRVNUX0lURU0QAxIRCg1NSVNDRUxMQU5F",
            "T1VTEAQqcAoOQ2hhcmFjdGVyQ2xhc3MSCwoHV0FSUklPUhAAEggKBE1BR0UQ",
            "ARILCgdXQVJMT0NLEAISCwoHUEFMQURJThADEgoKBlNIQU1BThAEEggKBE1P",
            "TksQBRIMCghBU1NBU1NJThAGEgkKBURSVUlEEAcq9AIKCVNraWxsVHlwZRIQ",
            "CgxNRUxFRV9BVFRBQ0sQABIRCg1SQU5HRURfQVRUQUNLEAESEAoMTUFHSUNf",
            "REFNQUdFEAISEgoOQVJFQV9PRl9FRkZFQ1QQAxIUChBEQU1BR0VfT1ZFUl9U",
            "SU1FEAQSCgoGU0hJRUxEEAUSCQoFRE9ER0UQBhIPCgtBUk1PUl9CT09TVBAH",
            "EhQKEFJFU0lTVEFOQ0VfQk9PU1QQCBIICgRIRUFMEAkSEAoMTUFOQV9SRVNU",
            "T1JFEAoSCAoEQlVGRhALEgoKBkRFQlVGRhAMEgoKBlNVTU1PThANEggKBFNU",
            "VU4QDhIKCgZGUkVFWkUQDxIICgRTTE9XEBASDQoJS05PQ0tCQUNLEBESCwoH",
            "UEFTU0lWRRASEggKBEFVUkEQExIMCghURUxFUE9SVBAUEggKBFRSQVAQFRIJ",
            "CgVDVVJTRRAWEgkKBUNIQVJNEBcSCgoGUkVWRUFMEBgSCgoGREVURUNUEBkq",
            "VgoGRWZmZWN0EgwKCFBPSVNPTkVEEAASCgoGRlJPWkVOEAESCwoHQlVSTklO",
            "RxACEgwKCFNJTEVOQ0VEEAMSCwoHU1RVTk5FRBAEEgoKBkNVUlNFRBAFMpUC",
            "ChBDaGFyYWN0ZXJTZXJ2aWNlEj8KD0NyZWF0ZUNoYXJhY3RlchIVLnJwZy5D",
            "aGFyYWN0ZXJSZXF1ZXN0GhUucnBnLkNoYXJhY3RlcklkUmVwbHkSPAoMR2V0",
            "Q2hhcmFjdGVyEhcucnBnLkNoYXJhY3RlcklkUmVxdWVzdBoTLnJwZy5DaGFy",
            "YWN0ZXJSZXBseRI/Cg9VcGRhdGVDaGFyYWN0ZXISFS5ycGcuQ2hhcmFjdGVy",
            "UmVxdWVzdBoVLnJwZy5DaGFyYWN0ZXJJZFJlcGx5EkEKD0RlbGV0ZUNoYXJh",
            "Y3RlchIXLnJwZy5DaGFyYWN0ZXJJZFJlcXVlc3QaFS5ycGcuQ2hhcmFjdGVy",
            "SWRSZXBseUIYqgIVUlBHLkdhbWVTZXJ2ZXIuUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RPG.GameServer.Protos.ItemType), typeof(global::RPG.GameServer.Protos.CharacterClass), typeof(global::RPG.GameServer.Protos.SkillType), typeof(global::RPG.GameServer.Protos.Effect), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.Stats), global::RPG.GameServer.Protos.Stats.Parser, new[]{ "Strength", "Agility", "Intelligence", "Wisdom", "Dexterity", "Vitality", "MagicResist", "NatureResist", "MisticResist", "Armor", "CritChance", "HitChance", "AttackSpeed", "MoveSpeed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.Item), global::RPG.GameServer.Protos.Item.Parser, new[]{ "Id", "Name", "Type", "Modifiers", "RequiredLevel" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.EquipmentSlots), global::RPG.GameServer.Protos.EquipmentSlots.Parser, new[]{ "Head", "Chest", "Weapon", "Shield", "Boots", "Gloves", "Rings", "Amulet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.BaseCharacter), global::RPG.GameServer.Protos.BaseCharacter.Parser, new[]{ "Id", "Name", "Level", "MaxHealth", "CurrentHealth", "MaxMana", "CurrentMana", "Stats", "Skills", "SkillCooldowns", "Position", "ActiveEffects" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.Skill), global::RPG.GameServer.Protos.Skill.Parser, new[]{ "Id", "Name", "Type", "ManaCost", "CooldownSeconds", "RequiredLevel", "Power", "Range", "DurationSeconds", "EffectDescription", "AppliedEffects", "CanCastWhileMoving" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.Location), global::RPG.GameServer.Protos.Location.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.PlayerCharacter), global::RPG.GameServer.Protos.PlayerCharacter.Parser, new[]{ "BaseCharacter", "Equipment", "Inventory", "SkillLevels", "SessionId", "CharacterClass" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.CharacterRequest), global::RPG.GameServer.Protos.CharacterRequest.Parser, new[]{ "Character" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.CharacterIdRequest), global::RPG.GameServer.Protos.CharacterIdRequest.Parser, new[]{ "CharacterId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.CharacterReply), global::RPG.GameServer.Protos.CharacterReply.Parser, new[]{ "Character" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.CharacterIdReply), global::RPG.GameServer.Protos.CharacterIdReply.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.ProtobufSkill), global::RPG.GameServer.Protos.ProtobufSkill.Parser, new[]{ "Id", "Name", "Type", "ManaCost", "CooldownSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPG.GameServer.Protos.ProtobufEquipmentSlots), global::RPG.GameServer.Protos.ProtobufEquipmentSlots.Parser, new[]{ "Head", "Chest", "Weapon", "Shield", "Boots", "Gloves", "Rings", "Amulet" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ItemType {
    [pbr::OriginalName("WEAPON")] Weapon = 0,
    [pbr::OriginalName("ARMOR")] Armor = 1,
    [pbr::OriginalName("CONSUMABLE")] Consumable = 2,
    [pbr::OriginalName("QUEST_ITEM")] QuestItem = 3,
    [pbr::OriginalName("MISCELLANEOUS")] Miscellaneous = 4,
  }

  public enum CharacterClass {
    [pbr::OriginalName("WARRIOR")] Warrior = 0,
    [pbr::OriginalName("MAGE")] Mage = 1,
    [pbr::OriginalName("WARLOCK")] Warlock = 2,
    [pbr::OriginalName("PALADIN")] Paladin = 3,
    [pbr::OriginalName("SHAMAN")] Shaman = 4,
    [pbr::OriginalName("MONK")] Monk = 5,
    [pbr::OriginalName("ASSASSIN")] Assassin = 6,
    [pbr::OriginalName("DRUID")] Druid = 7,
  }

  public enum SkillType {
    [pbr::OriginalName("MELEE_ATTACK")] MeleeAttack = 0,
    [pbr::OriginalName("RANGED_ATTACK")] RangedAttack = 1,
    [pbr::OriginalName("MAGIC_DAMAGE")] MagicDamage = 2,
    [pbr::OriginalName("AREA_OF_EFFECT")] AreaOfEffect = 3,
    [pbr::OriginalName("DAMAGE_OVER_TIME")] DamageOverTime = 4,
    [pbr::OriginalName("SHIELD")] Shield = 5,
    [pbr::OriginalName("DODGE")] Dodge = 6,
    [pbr::OriginalName("ARMOR_BOOST")] ArmorBoost = 7,
    [pbr::OriginalName("RESISTANCE_BOOST")] ResistanceBoost = 8,
    [pbr::OriginalName("HEAL")] Heal = 9,
    [pbr::OriginalName("MANA_RESTORE")] ManaRestore = 10,
    [pbr::OriginalName("BUFF")] Buff = 11,
    [pbr::OriginalName("DEBUFF")] Debuff = 12,
    [pbr::OriginalName("SUMMON")] Summon = 13,
    [pbr::OriginalName("STUN")] Stun = 14,
    [pbr::OriginalName("FREEZE")] Freeze = 15,
    [pbr::OriginalName("SLOW")] Slow = 16,
    [pbr::OriginalName("KNOCKBACK")] Knockback = 17,
    [pbr::OriginalName("PASSIVE")] Passive = 18,
    [pbr::OriginalName("AURA")] Aura = 19,
    [pbr::OriginalName("TELEPORT")] Teleport = 20,
    [pbr::OriginalName("TRAP")] Trap = 21,
    [pbr::OriginalName("CURSE")] Curse = 22,
    [pbr::OriginalName("CHARM")] Charm = 23,
    [pbr::OriginalName("REVEAL")] Reveal = 24,
    [pbr::OriginalName("DETECT")] Detect = 25,
  }

  public enum Effect {
    [pbr::OriginalName("POISONED")] Poisoned = 0,
    [pbr::OriginalName("FROZEN")] Frozen = 1,
    [pbr::OriginalName("BURNING")] Burning = 2,
    [pbr::OriginalName("SILENCED")] Silenced = 3,
    [pbr::OriginalName("STUNNED")] Stunned = 4,
    [pbr::OriginalName("CURSED")] Cursed = 5,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Stats : pb::IMessage<Stats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Stats> _parser = new pb::MessageParser<Stats>(() => new Stats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Stats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stats(Stats other) : this() {
      strength_ = other.strength_;
      agility_ = other.agility_;
      intelligence_ = other.intelligence_;
      wisdom_ = other.wisdom_;
      dexterity_ = other.dexterity_;
      vitality_ = other.vitality_;
      magicResist_ = other.magicResist_;
      natureResist_ = other.natureResist_;
      misticResist_ = other.misticResist_;
      armor_ = other.armor_;
      critChance_ = other.critChance_;
      hitChance_ = other.hitChance_;
      attackSpeed_ = other.attackSpeed_;
      moveSpeed_ = other.moveSpeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stats Clone() {
      return new Stats(this);
    }

    /// <summary>Field number for the "strength" field.</summary>
    public const int StrengthFieldNumber = 1;
    private int strength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Strength {
      get { return strength_; }
      set {
        strength_ = value;
      }
    }

    /// <summary>Field number for the "agility" field.</summary>
    public const int AgilityFieldNumber = 2;
    private int agility_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Agility {
      get { return agility_; }
      set {
        agility_ = value;
      }
    }

    /// <summary>Field number for the "intelligence" field.</summary>
    public const int IntelligenceFieldNumber = 3;
    private int intelligence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Intelligence {
      get { return intelligence_; }
      set {
        intelligence_ = value;
      }
    }

    /// <summary>Field number for the "wisdom" field.</summary>
    public const int WisdomFieldNumber = 4;
    private int wisdom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Wisdom {
      get { return wisdom_; }
      set {
        wisdom_ = value;
      }
    }

    /// <summary>Field number for the "dexterity" field.</summary>
    public const int DexterityFieldNumber = 5;
    private int dexterity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dexterity {
      get { return dexterity_; }
      set {
        dexterity_ = value;
      }
    }

    /// <summary>Field number for the "vitality" field.</summary>
    public const int VitalityFieldNumber = 6;
    private int vitality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Vitality {
      get { return vitality_; }
      set {
        vitality_ = value;
      }
    }

    /// <summary>Field number for the "magicResist" field.</summary>
    public const int MagicResistFieldNumber = 7;
    private int magicResist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MagicResist {
      get { return magicResist_; }
      set {
        magicResist_ = value;
      }
    }

    /// <summary>Field number for the "natureResist" field.</summary>
    public const int NatureResistFieldNumber = 8;
    private int natureResist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NatureResist {
      get { return natureResist_; }
      set {
        natureResist_ = value;
      }
    }

    /// <summary>Field number for the "misticResist" field.</summary>
    public const int MisticResistFieldNumber = 9;
    private int misticResist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MisticResist {
      get { return misticResist_; }
      set {
        misticResist_ = value;
      }
    }

    /// <summary>Field number for the "armor" field.</summary>
    public const int ArmorFieldNumber = 10;
    private int armor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Armor {
      get { return armor_; }
      set {
        armor_ = value;
      }
    }

    /// <summary>Field number for the "critChance" field.</summary>
    public const int CritChanceFieldNumber = 11;
    private int critChance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CritChance {
      get { return critChance_; }
      set {
        critChance_ = value;
      }
    }

    /// <summary>Field number for the "hitChance" field.</summary>
    public const int HitChanceFieldNumber = 12;
    private int hitChance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitChance {
      get { return hitChance_; }
      set {
        hitChance_ = value;
      }
    }

    /// <summary>Field number for the "attackSpeed" field.</summary>
    public const int AttackSpeedFieldNumber = 13;
    private int attackSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackSpeed {
      get { return attackSpeed_; }
      set {
        attackSpeed_ = value;
      }
    }

    /// <summary>Field number for the "moveSpeed" field.</summary>
    public const int MoveSpeedFieldNumber = 14;
    private int moveSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MoveSpeed {
      get { return moveSpeed_; }
      set {
        moveSpeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Stats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Stats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Strength != other.Strength) return false;
      if (Agility != other.Agility) return false;
      if (Intelligence != other.Intelligence) return false;
      if (Wisdom != other.Wisdom) return false;
      if (Dexterity != other.Dexterity) return false;
      if (Vitality != other.Vitality) return false;
      if (MagicResist != other.MagicResist) return false;
      if (NatureResist != other.NatureResist) return false;
      if (MisticResist != other.MisticResist) return false;
      if (Armor != other.Armor) return false;
      if (CritChance != other.CritChance) return false;
      if (HitChance != other.HitChance) return false;
      if (AttackSpeed != other.AttackSpeed) return false;
      if (MoveSpeed != other.MoveSpeed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Strength != 0) hash ^= Strength.GetHashCode();
      if (Agility != 0) hash ^= Agility.GetHashCode();
      if (Intelligence != 0) hash ^= Intelligence.GetHashCode();
      if (Wisdom != 0) hash ^= Wisdom.GetHashCode();
      if (Dexterity != 0) hash ^= Dexterity.GetHashCode();
      if (Vitality != 0) hash ^= Vitality.GetHashCode();
      if (MagicResist != 0) hash ^= MagicResist.GetHashCode();
      if (NatureResist != 0) hash ^= NatureResist.GetHashCode();
      if (MisticResist != 0) hash ^= MisticResist.GetHashCode();
      if (Armor != 0) hash ^= Armor.GetHashCode();
      if (CritChance != 0) hash ^= CritChance.GetHashCode();
      if (HitChance != 0) hash ^= HitChance.GetHashCode();
      if (AttackSpeed != 0) hash ^= AttackSpeed.GetHashCode();
      if (MoveSpeed != 0) hash ^= MoveSpeed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Strength != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Strength);
      }
      if (Agility != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Agility);
      }
      if (Intelligence != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Intelligence);
      }
      if (Wisdom != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Wisdom);
      }
      if (Dexterity != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Dexterity);
      }
      if (Vitality != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Vitality);
      }
      if (MagicResist != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MagicResist);
      }
      if (NatureResist != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(NatureResist);
      }
      if (MisticResist != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MisticResist);
      }
      if (Armor != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Armor);
      }
      if (CritChance != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CritChance);
      }
      if (HitChance != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(HitChance);
      }
      if (AttackSpeed != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AttackSpeed);
      }
      if (MoveSpeed != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(MoveSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Strength != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Strength);
      }
      if (Agility != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Agility);
      }
      if (Intelligence != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Intelligence);
      }
      if (Wisdom != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Wisdom);
      }
      if (Dexterity != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Dexterity);
      }
      if (Vitality != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Vitality);
      }
      if (MagicResist != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MagicResist);
      }
      if (NatureResist != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(NatureResist);
      }
      if (MisticResist != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MisticResist);
      }
      if (Armor != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Armor);
      }
      if (CritChance != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CritChance);
      }
      if (HitChance != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(HitChance);
      }
      if (AttackSpeed != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AttackSpeed);
      }
      if (MoveSpeed != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(MoveSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Strength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Strength);
      }
      if (Agility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Agility);
      }
      if (Intelligence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Intelligence);
      }
      if (Wisdom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Wisdom);
      }
      if (Dexterity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dexterity);
      }
      if (Vitality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vitality);
      }
      if (MagicResist != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicResist);
      }
      if (NatureResist != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NatureResist);
      }
      if (MisticResist != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MisticResist);
      }
      if (Armor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Armor);
      }
      if (CritChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritChance);
      }
      if (HitChance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitChance);
      }
      if (AttackSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackSpeed);
      }
      if (MoveSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoveSpeed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Stats other) {
      if (other == null) {
        return;
      }
      if (other.Strength != 0) {
        Strength = other.Strength;
      }
      if (other.Agility != 0) {
        Agility = other.Agility;
      }
      if (other.Intelligence != 0) {
        Intelligence = other.Intelligence;
      }
      if (other.Wisdom != 0) {
        Wisdom = other.Wisdom;
      }
      if (other.Dexterity != 0) {
        Dexterity = other.Dexterity;
      }
      if (other.Vitality != 0) {
        Vitality = other.Vitality;
      }
      if (other.MagicResist != 0) {
        MagicResist = other.MagicResist;
      }
      if (other.NatureResist != 0) {
        NatureResist = other.NatureResist;
      }
      if (other.MisticResist != 0) {
        MisticResist = other.MisticResist;
      }
      if (other.Armor != 0) {
        Armor = other.Armor;
      }
      if (other.CritChance != 0) {
        CritChance = other.CritChance;
      }
      if (other.HitChance != 0) {
        HitChance = other.HitChance;
      }
      if (other.AttackSpeed != 0) {
        AttackSpeed = other.AttackSpeed;
      }
      if (other.MoveSpeed != 0) {
        MoveSpeed = other.MoveSpeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Strength = input.ReadInt32();
            break;
          }
          case 16: {
            Agility = input.ReadInt32();
            break;
          }
          case 24: {
            Intelligence = input.ReadInt32();
            break;
          }
          case 32: {
            Wisdom = input.ReadInt32();
            break;
          }
          case 40: {
            Dexterity = input.ReadInt32();
            break;
          }
          case 48: {
            Vitality = input.ReadInt32();
            break;
          }
          case 56: {
            MagicResist = input.ReadInt32();
            break;
          }
          case 64: {
            NatureResist = input.ReadInt32();
            break;
          }
          case 72: {
            MisticResist = input.ReadInt32();
            break;
          }
          case 80: {
            Armor = input.ReadInt32();
            break;
          }
          case 88: {
            CritChance = input.ReadInt32();
            break;
          }
          case 96: {
            HitChance = input.ReadInt32();
            break;
          }
          case 104: {
            AttackSpeed = input.ReadInt32();
            break;
          }
          case 112: {
            MoveSpeed = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Strength = input.ReadInt32();
            break;
          }
          case 16: {
            Agility = input.ReadInt32();
            break;
          }
          case 24: {
            Intelligence = input.ReadInt32();
            break;
          }
          case 32: {
            Wisdom = input.ReadInt32();
            break;
          }
          case 40: {
            Dexterity = input.ReadInt32();
            break;
          }
          case 48: {
            Vitality = input.ReadInt32();
            break;
          }
          case 56: {
            MagicResist = input.ReadInt32();
            break;
          }
          case 64: {
            NatureResist = input.ReadInt32();
            break;
          }
          case 72: {
            MisticResist = input.ReadInt32();
            break;
          }
          case 80: {
            Armor = input.ReadInt32();
            break;
          }
          case 88: {
            CritChance = input.ReadInt32();
            break;
          }
          case 96: {
            HitChance = input.ReadInt32();
            break;
          }
          case 104: {
            AttackSpeed = input.ReadInt32();
            break;
          }
          case 112: {
            MoveSpeed = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Item : pb::IMessage<Item>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item(Item other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      type_ = other.type_;
      modifiers_ = other.modifiers_.Clone();
      requiredLevel_ = other.requiredLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::RPG.GameServer.Protos.ItemType type_ = global::RPG.GameServer.Protos.ItemType.Weapon;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.ItemType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 4;
    private static readonly pbc::MapField<string, int>.Codec _map_modifiers_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 34);
    private readonly pbc::MapField<string, int> modifiers_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, int> Modifiers {
      get { return modifiers_; }
    }

    /// <summary>Field number for the "requiredLevel" field.</summary>
    public const int RequiredLevelFieldNumber = 5;
    private int requiredLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RequiredLevel {
      get { return requiredLevel_; }
      set {
        requiredLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (!Modifiers.Equals(other.Modifiers)) return false;
      if (RequiredLevel != other.RequiredLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::RPG.GameServer.Protos.ItemType.Weapon) hash ^= Type.GetHashCode();
      hash ^= Modifiers.GetHashCode();
      if (RequiredLevel != 0) hash ^= RequiredLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::RPG.GameServer.Protos.ItemType.Weapon) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      modifiers_.WriteTo(output, _map_modifiers_codec);
      if (RequiredLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RequiredLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::RPG.GameServer.Protos.ItemType.Weapon) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      modifiers_.WriteTo(ref output, _map_modifiers_codec);
      if (RequiredLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RequiredLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::RPG.GameServer.Protos.ItemType.Weapon) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += modifiers_.CalculateSize(_map_modifiers_codec);
      if (RequiredLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequiredLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::RPG.GameServer.Protos.ItemType.Weapon) {
        Type = other.Type;
      }
      modifiers_.MergeFrom(other.modifiers_);
      if (other.RequiredLevel != 0) {
        RequiredLevel = other.RequiredLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::RPG.GameServer.Protos.ItemType) input.ReadEnum();
            break;
          }
          case 34: {
            modifiers_.AddEntriesFrom(input, _map_modifiers_codec);
            break;
          }
          case 40: {
            RequiredLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::RPG.GameServer.Protos.ItemType) input.ReadEnum();
            break;
          }
          case 34: {
            modifiers_.AddEntriesFrom(ref input, _map_modifiers_codec);
            break;
          }
          case 40: {
            RequiredLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EquipmentSlots : pb::IMessage<EquipmentSlots>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EquipmentSlots> _parser = new pb::MessageParser<EquipmentSlots>(() => new EquipmentSlots());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EquipmentSlots> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipmentSlots() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipmentSlots(EquipmentSlots other) : this() {
      head_ = other.head_ != null ? other.head_.Clone() : null;
      chest_ = other.chest_ != null ? other.chest_.Clone() : null;
      weapon_ = other.weapon_ != null ? other.weapon_.Clone() : null;
      shield_ = other.shield_ != null ? other.shield_.Clone() : null;
      boots_ = other.boots_ != null ? other.boots_.Clone() : null;
      gloves_ = other.gloves_ != null ? other.gloves_.Clone() : null;
      rings_ = other.rings_.Clone();
      amulet_ = other.amulet_ != null ? other.amulet_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EquipmentSlots Clone() {
      return new EquipmentSlots(this);
    }

    /// <summary>Field number for the "head" field.</summary>
    public const int HeadFieldNumber = 1;
    private global::RPG.GameServer.Protos.Item head_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    /// <summary>Field number for the "chest" field.</summary>
    public const int ChestFieldNumber = 2;
    private global::RPG.GameServer.Protos.Item chest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Chest {
      get { return chest_; }
      set {
        chest_ = value;
      }
    }

    /// <summary>Field number for the "weapon" field.</summary>
    public const int WeaponFieldNumber = 3;
    private global::RPG.GameServer.Protos.Item weapon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Weapon {
      get { return weapon_; }
      set {
        weapon_ = value;
      }
    }

    /// <summary>Field number for the "shield" field.</summary>
    public const int ShieldFieldNumber = 4;
    private global::RPG.GameServer.Protos.Item shield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Shield {
      get { return shield_; }
      set {
        shield_ = value;
      }
    }

    /// <summary>Field number for the "boots" field.</summary>
    public const int BootsFieldNumber = 5;
    private global::RPG.GameServer.Protos.Item boots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Boots {
      get { return boots_; }
      set {
        boots_ = value;
      }
    }

    /// <summary>Field number for the "gloves" field.</summary>
    public const int GlovesFieldNumber = 6;
    private global::RPG.GameServer.Protos.Item gloves_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Gloves {
      get { return gloves_; }
      set {
        gloves_ = value;
      }
    }

    /// <summary>Field number for the "rings" field.</summary>
    public const int RingsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::RPG.GameServer.Protos.Item> _repeated_rings_codec
        = pb::FieldCodec.ForMessage(58, global::RPG.GameServer.Protos.Item.Parser);
    private readonly pbc::RepeatedField<global::RPG.GameServer.Protos.Item> rings_ = new pbc::RepeatedField<global::RPG.GameServer.Protos.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RPG.GameServer.Protos.Item> Rings {
      get { return rings_; }
    }

    /// <summary>Field number for the "amulet" field.</summary>
    public const int AmuletFieldNumber = 8;
    private global::RPG.GameServer.Protos.Item amulet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Amulet {
      get { return amulet_; }
      set {
        amulet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EquipmentSlots);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EquipmentSlots other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Head, other.Head)) return false;
      if (!object.Equals(Chest, other.Chest)) return false;
      if (!object.Equals(Weapon, other.Weapon)) return false;
      if (!object.Equals(Shield, other.Shield)) return false;
      if (!object.Equals(Boots, other.Boots)) return false;
      if (!object.Equals(Gloves, other.Gloves)) return false;
      if(!rings_.Equals(other.rings_)) return false;
      if (!object.Equals(Amulet, other.Amulet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (head_ != null) hash ^= Head.GetHashCode();
      if (chest_ != null) hash ^= Chest.GetHashCode();
      if (weapon_ != null) hash ^= Weapon.GetHashCode();
      if (shield_ != null) hash ^= Shield.GetHashCode();
      if (boots_ != null) hash ^= Boots.GetHashCode();
      if (gloves_ != null) hash ^= Gloves.GetHashCode();
      hash ^= rings_.GetHashCode();
      if (amulet_ != null) hash ^= Amulet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (head_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Head);
      }
      if (chest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Chest);
      }
      if (weapon_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Weapon);
      }
      if (shield_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Shield);
      }
      if (boots_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Boots);
      }
      if (gloves_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Gloves);
      }
      rings_.WriteTo(output, _repeated_rings_codec);
      if (amulet_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Amulet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (head_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Head);
      }
      if (chest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Chest);
      }
      if (weapon_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Weapon);
      }
      if (shield_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Shield);
      }
      if (boots_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Boots);
      }
      if (gloves_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Gloves);
      }
      rings_.WriteTo(ref output, _repeated_rings_codec);
      if (amulet_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Amulet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (head_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Head);
      }
      if (chest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chest);
      }
      if (weapon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weapon);
      }
      if (shield_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shield);
      }
      if (boots_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Boots);
      }
      if (gloves_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gloves);
      }
      size += rings_.CalculateSize(_repeated_rings_codec);
      if (amulet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amulet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EquipmentSlots other) {
      if (other == null) {
        return;
      }
      if (other.head_ != null) {
        if (head_ == null) {
          Head = new global::RPG.GameServer.Protos.Item();
        }
        Head.MergeFrom(other.Head);
      }
      if (other.chest_ != null) {
        if (chest_ == null) {
          Chest = new global::RPG.GameServer.Protos.Item();
        }
        Chest.MergeFrom(other.Chest);
      }
      if (other.weapon_ != null) {
        if (weapon_ == null) {
          Weapon = new global::RPG.GameServer.Protos.Item();
        }
        Weapon.MergeFrom(other.Weapon);
      }
      if (other.shield_ != null) {
        if (shield_ == null) {
          Shield = new global::RPG.GameServer.Protos.Item();
        }
        Shield.MergeFrom(other.Shield);
      }
      if (other.boots_ != null) {
        if (boots_ == null) {
          Boots = new global::RPG.GameServer.Protos.Item();
        }
        Boots.MergeFrom(other.Boots);
      }
      if (other.gloves_ != null) {
        if (gloves_ == null) {
          Gloves = new global::RPG.GameServer.Protos.Item();
        }
        Gloves.MergeFrom(other.Gloves);
      }
      rings_.Add(other.rings_);
      if (other.amulet_ != null) {
        if (amulet_ == null) {
          Amulet = new global::RPG.GameServer.Protos.Item();
        }
        Amulet.MergeFrom(other.Amulet);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (head_ == null) {
              Head = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Head);
            break;
          }
          case 18: {
            if (chest_ == null) {
              Chest = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Chest);
            break;
          }
          case 26: {
            if (weapon_ == null) {
              Weapon = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 34: {
            if (shield_ == null) {
              Shield = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Shield);
            break;
          }
          case 42: {
            if (boots_ == null) {
              Boots = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Boots);
            break;
          }
          case 50: {
            if (gloves_ == null) {
              Gloves = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Gloves);
            break;
          }
          case 58: {
            rings_.AddEntriesFrom(input, _repeated_rings_codec);
            break;
          }
          case 66: {
            if (amulet_ == null) {
              Amulet = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Amulet);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (head_ == null) {
              Head = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Head);
            break;
          }
          case 18: {
            if (chest_ == null) {
              Chest = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Chest);
            break;
          }
          case 26: {
            if (weapon_ == null) {
              Weapon = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 34: {
            if (shield_ == null) {
              Shield = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Shield);
            break;
          }
          case 42: {
            if (boots_ == null) {
              Boots = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Boots);
            break;
          }
          case 50: {
            if (gloves_ == null) {
              Gloves = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Gloves);
            break;
          }
          case 58: {
            rings_.AddEntriesFrom(ref input, _repeated_rings_codec);
            break;
          }
          case 66: {
            if (amulet_ == null) {
              Amulet = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Amulet);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BaseCharacter : pb::IMessage<BaseCharacter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BaseCharacter> _parser = new pb::MessageParser<BaseCharacter>(() => new BaseCharacter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BaseCharacter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseCharacter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseCharacter(BaseCharacter other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      level_ = other.level_;
      maxHealth_ = other.maxHealth_;
      currentHealth_ = other.currentHealth_;
      maxMana_ = other.maxMana_;
      currentMana_ = other.currentMana_;
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      skills_ = other.skills_.Clone();
      skillCooldowns_ = other.skillCooldowns_.Clone();
      position_ = other.position_ != null ? other.position_.Clone() : null;
      activeEffects_ = other.activeEffects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseCharacter Clone() {
      return new BaseCharacter(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "maxHealth" field.</summary>
    public const int MaxHealthFieldNumber = 4;
    private int maxHealth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxHealth {
      get { return maxHealth_; }
      set {
        maxHealth_ = value;
      }
    }

    /// <summary>Field number for the "currentHealth" field.</summary>
    public const int CurrentHealthFieldNumber = 5;
    private int currentHealth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentHealth {
      get { return currentHealth_; }
      set {
        currentHealth_ = value;
      }
    }

    /// <summary>Field number for the "maxMana" field.</summary>
    public const int MaxManaFieldNumber = 6;
    private int maxMana_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxMana {
      get { return maxMana_; }
      set {
        maxMana_ = value;
      }
    }

    /// <summary>Field number for the "currentMana" field.</summary>
    public const int CurrentManaFieldNumber = 7;
    private int currentMana_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentMana {
      get { return currentMana_; }
      set {
        currentMana_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 8;
    private global::RPG.GameServer.Protos.Stats stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Stats Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "skills" field.</summary>
    public const int SkillsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::RPG.GameServer.Protos.Skill> _repeated_skills_codec
        = pb::FieldCodec.ForMessage(74, global::RPG.GameServer.Protos.Skill.Parser);
    private readonly pbc::RepeatedField<global::RPG.GameServer.Protos.Skill> skills_ = new pbc::RepeatedField<global::RPG.GameServer.Protos.Skill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RPG.GameServer.Protos.Skill> Skills {
      get { return skills_; }
    }

    /// <summary>Field number for the "skillCooldowns" field.</summary>
    public const int SkillCooldownsFieldNumber = 10;
    private static readonly pbc::MapField<int, string>.Codec _map_skillCooldowns_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 82);
    private readonly pbc::MapField<int, string> skillCooldowns_ = new pbc::MapField<int, string>();
    /// <summary>
    /// Using string for DateTime representation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, string> SkillCooldowns {
      get { return skillCooldowns_; }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 11;
    private global::RPG.GameServer.Protos.Location position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Location Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "activeEffects" field.</summary>
    public const int ActiveEffectsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::RPG.GameServer.Protos.Effect> _repeated_activeEffects_codec
        = pb::FieldCodec.ForEnum(98, x => (int) x, x => (global::RPG.GameServer.Protos.Effect) x);
    private readonly pbc::RepeatedField<global::RPG.GameServer.Protos.Effect> activeEffects_ = new pbc::RepeatedField<global::RPG.GameServer.Protos.Effect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RPG.GameServer.Protos.Effect> ActiveEffects {
      get { return activeEffects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BaseCharacter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BaseCharacter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Level != other.Level) return false;
      if (MaxHealth != other.MaxHealth) return false;
      if (CurrentHealth != other.CurrentHealth) return false;
      if (MaxMana != other.MaxMana) return false;
      if (CurrentMana != other.CurrentMana) return false;
      if (!object.Equals(Stats, other.Stats)) return false;
      if(!skills_.Equals(other.skills_)) return false;
      if (!SkillCooldowns.Equals(other.SkillCooldowns)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if(!activeEffects_.Equals(other.activeEffects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (MaxHealth != 0) hash ^= MaxHealth.GetHashCode();
      if (CurrentHealth != 0) hash ^= CurrentHealth.GetHashCode();
      if (MaxMana != 0) hash ^= MaxMana.GetHashCode();
      if (CurrentMana != 0) hash ^= CurrentMana.GetHashCode();
      if (stats_ != null) hash ^= Stats.GetHashCode();
      hash ^= skills_.GetHashCode();
      hash ^= SkillCooldowns.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      hash ^= activeEffects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (MaxHealth != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxHealth);
      }
      if (CurrentHealth != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrentHealth);
      }
      if (MaxMana != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxMana);
      }
      if (CurrentMana != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CurrentMana);
      }
      if (stats_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Stats);
      }
      skills_.WriteTo(output, _repeated_skills_codec);
      skillCooldowns_.WriteTo(output, _map_skillCooldowns_codec);
      if (position_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Position);
      }
      activeEffects_.WriteTo(output, _repeated_activeEffects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (MaxHealth != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxHealth);
      }
      if (CurrentHealth != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrentHealth);
      }
      if (MaxMana != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxMana);
      }
      if (CurrentMana != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CurrentMana);
      }
      if (stats_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Stats);
      }
      skills_.WriteTo(ref output, _repeated_skills_codec);
      skillCooldowns_.WriteTo(ref output, _map_skillCooldowns_codec);
      if (position_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Position);
      }
      activeEffects_.WriteTo(ref output, _repeated_activeEffects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (MaxHealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxHealth);
      }
      if (CurrentHealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentHealth);
      }
      if (MaxMana != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxMana);
      }
      if (CurrentMana != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentMana);
      }
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      size += skills_.CalculateSize(_repeated_skills_codec);
      size += skillCooldowns_.CalculateSize(_map_skillCooldowns_codec);
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      size += activeEffects_.CalculateSize(_repeated_activeEffects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BaseCharacter other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.MaxHealth != 0) {
        MaxHealth = other.MaxHealth;
      }
      if (other.CurrentHealth != 0) {
        CurrentHealth = other.CurrentHealth;
      }
      if (other.MaxMana != 0) {
        MaxMana = other.MaxMana;
      }
      if (other.CurrentMana != 0) {
        CurrentMana = other.CurrentMana;
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::RPG.GameServer.Protos.Stats();
        }
        Stats.MergeFrom(other.Stats);
      }
      skills_.Add(other.skills_);
      skillCooldowns_.MergeFrom(other.skillCooldowns_);
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::RPG.GameServer.Protos.Location();
        }
        Position.MergeFrom(other.Position);
      }
      activeEffects_.Add(other.activeEffects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            MaxHealth = input.ReadInt32();
            break;
          }
          case 40: {
            CurrentHealth = input.ReadInt32();
            break;
          }
          case 48: {
            MaxMana = input.ReadInt32();
            break;
          }
          case 56: {
            CurrentMana = input.ReadInt32();
            break;
          }
          case 66: {
            if (stats_ == null) {
              Stats = new global::RPG.GameServer.Protos.Stats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 74: {
            skills_.AddEntriesFrom(input, _repeated_skills_codec);
            break;
          }
          case 82: {
            skillCooldowns_.AddEntriesFrom(input, _map_skillCooldowns_codec);
            break;
          }
          case 90: {
            if (position_ == null) {
              Position = new global::RPG.GameServer.Protos.Location();
            }
            input.ReadMessage(Position);
            break;
          }
          case 98:
          case 96: {
            activeEffects_.AddEntriesFrom(input, _repeated_activeEffects_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            MaxHealth = input.ReadInt32();
            break;
          }
          case 40: {
            CurrentHealth = input.ReadInt32();
            break;
          }
          case 48: {
            MaxMana = input.ReadInt32();
            break;
          }
          case 56: {
            CurrentMana = input.ReadInt32();
            break;
          }
          case 66: {
            if (stats_ == null) {
              Stats = new global::RPG.GameServer.Protos.Stats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 74: {
            skills_.AddEntriesFrom(ref input, _repeated_skills_codec);
            break;
          }
          case 82: {
            skillCooldowns_.AddEntriesFrom(ref input, _map_skillCooldowns_codec);
            break;
          }
          case 90: {
            if (position_ == null) {
              Position = new global::RPG.GameServer.Protos.Location();
            }
            input.ReadMessage(Position);
            break;
          }
          case 98:
          case 96: {
            activeEffects_.AddEntriesFrom(ref input, _repeated_activeEffects_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Skill : pb::IMessage<Skill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Skill> _parser = new pb::MessageParser<Skill>(() => new Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill(Skill other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      type_ = other.type_;
      manaCost_ = other.manaCost_;
      cooldownSeconds_ = other.cooldownSeconds_;
      requiredLevel_ = other.requiredLevel_;
      power_ = other.power_;
      range_ = other.range_;
      durationSeconds_ = other.durationSeconds_;
      effectDescription_ = other.effectDescription_;
      appliedEffects_ = other.appliedEffects_.Clone();
      canCastWhileMoving_ = other.canCastWhileMoving_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill Clone() {
      return new Skill(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::RPG.GameServer.Protos.SkillType type_ = global::RPG.GameServer.Protos.SkillType.MeleeAttack;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.SkillType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "manaCost" field.</summary>
    public const int ManaCostFieldNumber = 4;
    private int manaCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ManaCost {
      get { return manaCost_; }
      set {
        manaCost_ = value;
      }
    }

    /// <summary>Field number for the "cooldownSeconds" field.</summary>
    public const int CooldownSecondsFieldNumber = 5;
    private float cooldownSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CooldownSeconds {
      get { return cooldownSeconds_; }
      set {
        cooldownSeconds_ = value;
      }
    }

    /// <summary>Field number for the "requiredLevel" field.</summary>
    public const int RequiredLevelFieldNumber = 6;
    private int requiredLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RequiredLevel {
      get { return requiredLevel_; }
      set {
        requiredLevel_ = value;
      }
    }

    /// <summary>Field number for the "power" field.</summary>
    public const int PowerFieldNumber = 7;
    private int power_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Power {
      get { return power_; }
      set {
        power_ = value;
      }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 8;
    private float range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "durationSeconds" field.</summary>
    public const int DurationSecondsFieldNumber = 9;
    private float durationSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DurationSeconds {
      get { return durationSeconds_; }
      set {
        durationSeconds_ = value;
      }
    }

    /// <summary>Field number for the "effectDescription" field.</summary>
    public const int EffectDescriptionFieldNumber = 10;
    private string effectDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EffectDescription {
      get { return effectDescription_; }
      set {
        effectDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "appliedEffects" field.</summary>
    public const int AppliedEffectsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::RPG.GameServer.Protos.Effect> _repeated_appliedEffects_codec
        = pb::FieldCodec.ForEnum(90, x => (int) x, x => (global::RPG.GameServer.Protos.Effect) x);
    private readonly pbc::RepeatedField<global::RPG.GameServer.Protos.Effect> appliedEffects_ = new pbc::RepeatedField<global::RPG.GameServer.Protos.Effect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RPG.GameServer.Protos.Effect> AppliedEffects {
      get { return appliedEffects_; }
    }

    /// <summary>Field number for the "canCastWhileMoving" field.</summary>
    public const int CanCastWhileMovingFieldNumber = 12;
    private bool canCastWhileMoving_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanCastWhileMoving {
      get { return canCastWhileMoving_; }
      set {
        canCastWhileMoving_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (ManaCost != other.ManaCost) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CooldownSeconds, other.CooldownSeconds)) return false;
      if (RequiredLevel != other.RequiredLevel) return false;
      if (Power != other.Power) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Range, other.Range)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DurationSeconds, other.DurationSeconds)) return false;
      if (EffectDescription != other.EffectDescription) return false;
      if(!appliedEffects_.Equals(other.appliedEffects_)) return false;
      if (CanCastWhileMoving != other.CanCastWhileMoving) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::RPG.GameServer.Protos.SkillType.MeleeAttack) hash ^= Type.GetHashCode();
      if (ManaCost != 0) hash ^= ManaCost.GetHashCode();
      if (CooldownSeconds != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CooldownSeconds);
      if (RequiredLevel != 0) hash ^= RequiredLevel.GetHashCode();
      if (Power != 0) hash ^= Power.GetHashCode();
      if (Range != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Range);
      if (DurationSeconds != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DurationSeconds);
      if (EffectDescription.Length != 0) hash ^= EffectDescription.GetHashCode();
      hash ^= appliedEffects_.GetHashCode();
      if (CanCastWhileMoving != false) hash ^= CanCastWhileMoving.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::RPG.GameServer.Protos.SkillType.MeleeAttack) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (ManaCost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ManaCost);
      }
      if (CooldownSeconds != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CooldownSeconds);
      }
      if (RequiredLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RequiredLevel);
      }
      if (Power != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Power);
      }
      if (Range != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Range);
      }
      if (DurationSeconds != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(DurationSeconds);
      }
      if (EffectDescription.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(EffectDescription);
      }
      appliedEffects_.WriteTo(output, _repeated_appliedEffects_codec);
      if (CanCastWhileMoving != false) {
        output.WriteRawTag(96);
        output.WriteBool(CanCastWhileMoving);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::RPG.GameServer.Protos.SkillType.MeleeAttack) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (ManaCost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ManaCost);
      }
      if (CooldownSeconds != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CooldownSeconds);
      }
      if (RequiredLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RequiredLevel);
      }
      if (Power != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Power);
      }
      if (Range != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Range);
      }
      if (DurationSeconds != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(DurationSeconds);
      }
      if (EffectDescription.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(EffectDescription);
      }
      appliedEffects_.WriteTo(ref output, _repeated_appliedEffects_codec);
      if (CanCastWhileMoving != false) {
        output.WriteRawTag(96);
        output.WriteBool(CanCastWhileMoving);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::RPG.GameServer.Protos.SkillType.MeleeAttack) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ManaCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ManaCost);
      }
      if (CooldownSeconds != 0F) {
        size += 1 + 4;
      }
      if (RequiredLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequiredLevel);
      }
      if (Power != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Power);
      }
      if (Range != 0F) {
        size += 1 + 4;
      }
      if (DurationSeconds != 0F) {
        size += 1 + 4;
      }
      if (EffectDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EffectDescription);
      }
      size += appliedEffects_.CalculateSize(_repeated_appliedEffects_codec);
      if (CanCastWhileMoving != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Skill other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::RPG.GameServer.Protos.SkillType.MeleeAttack) {
        Type = other.Type;
      }
      if (other.ManaCost != 0) {
        ManaCost = other.ManaCost;
      }
      if (other.CooldownSeconds != 0F) {
        CooldownSeconds = other.CooldownSeconds;
      }
      if (other.RequiredLevel != 0) {
        RequiredLevel = other.RequiredLevel;
      }
      if (other.Power != 0) {
        Power = other.Power;
      }
      if (other.Range != 0F) {
        Range = other.Range;
      }
      if (other.DurationSeconds != 0F) {
        DurationSeconds = other.DurationSeconds;
      }
      if (other.EffectDescription.Length != 0) {
        EffectDescription = other.EffectDescription;
      }
      appliedEffects_.Add(other.appliedEffects_);
      if (other.CanCastWhileMoving != false) {
        CanCastWhileMoving = other.CanCastWhileMoving;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::RPG.GameServer.Protos.SkillType) input.ReadEnum();
            break;
          }
          case 32: {
            ManaCost = input.ReadInt32();
            break;
          }
          case 45: {
            CooldownSeconds = input.ReadFloat();
            break;
          }
          case 48: {
            RequiredLevel = input.ReadInt32();
            break;
          }
          case 56: {
            Power = input.ReadInt32();
            break;
          }
          case 69: {
            Range = input.ReadFloat();
            break;
          }
          case 77: {
            DurationSeconds = input.ReadFloat();
            break;
          }
          case 82: {
            EffectDescription = input.ReadString();
            break;
          }
          case 90:
          case 88: {
            appliedEffects_.AddEntriesFrom(input, _repeated_appliedEffects_codec);
            break;
          }
          case 96: {
            CanCastWhileMoving = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::RPG.GameServer.Protos.SkillType) input.ReadEnum();
            break;
          }
          case 32: {
            ManaCost = input.ReadInt32();
            break;
          }
          case 45: {
            CooldownSeconds = input.ReadFloat();
            break;
          }
          case 48: {
            RequiredLevel = input.ReadInt32();
            break;
          }
          case 56: {
            Power = input.ReadInt32();
            break;
          }
          case 69: {
            Range = input.ReadFloat();
            break;
          }
          case 77: {
            DurationSeconds = input.ReadFloat();
            break;
          }
          case 82: {
            EffectDescription = input.ReadString();
            break;
          }
          case 90:
          case 88: {
            appliedEffects_.AddEntriesFrom(ref input, _repeated_appliedEffects_codec);
            break;
          }
          case 96: {
            CanCastWhileMoving = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location(Location other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private double z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (Z != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (Z != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (Z != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      if (other.Z != 0D) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
          case 25: {
            Z = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
          case 25: {
            Z = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerCharacter : pb::IMessage<PlayerCharacter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerCharacter> _parser = new pb::MessageParser<PlayerCharacter>(() => new PlayerCharacter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerCharacter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCharacter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCharacter(PlayerCharacter other) : this() {
      baseCharacter_ = other.baseCharacter_ != null ? other.baseCharacter_.Clone() : null;
      equipment_ = other.equipment_ != null ? other.equipment_.Clone() : null;
      inventory_ = other.inventory_.Clone();
      skillLevels_ = other.skillLevels_.Clone();
      sessionId_ = other.sessionId_;
      characterClass_ = other.characterClass_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerCharacter Clone() {
      return new PlayerCharacter(this);
    }

    /// <summary>Field number for the "baseCharacter" field.</summary>
    public const int BaseCharacterFieldNumber = 1;
    private global::RPG.GameServer.Protos.BaseCharacter baseCharacter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.BaseCharacter BaseCharacter {
      get { return baseCharacter_; }
      set {
        baseCharacter_ = value;
      }
    }

    /// <summary>Field number for the "equipment" field.</summary>
    public const int EquipmentFieldNumber = 2;
    private global::RPG.GameServer.Protos.EquipmentSlots equipment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.EquipmentSlots Equipment {
      get { return equipment_; }
      set {
        equipment_ = value;
      }
    }

    /// <summary>Field number for the "inventory" field.</summary>
    public const int InventoryFieldNumber = 3;
    private static readonly pb::FieldCodec<global::RPG.GameServer.Protos.Item> _repeated_inventory_codec
        = pb::FieldCodec.ForMessage(26, global::RPG.GameServer.Protos.Item.Parser);
    private readonly pbc::RepeatedField<global::RPG.GameServer.Protos.Item> inventory_ = new pbc::RepeatedField<global::RPG.GameServer.Protos.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RPG.GameServer.Protos.Item> Inventory {
      get { return inventory_; }
    }

    /// <summary>Field number for the "skillLevels" field.</summary>
    public const int SkillLevelsFieldNumber = 4;
    private static readonly pbc::MapField<int, int>.Codec _map_skillLevels_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 34);
    private readonly pbc::MapField<int, int> skillLevels_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, int> SkillLevels {
      get { return skillLevels_; }
    }

    /// <summary>Field number for the "sessionId" field.</summary>
    public const int SessionIdFieldNumber = 5;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "characterClass" field.</summary>
    public const int CharacterClassFieldNumber = 6;
    private global::RPG.GameServer.Protos.CharacterClass characterClass_ = global::RPG.GameServer.Protos.CharacterClass.Warrior;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.CharacterClass CharacterClass {
      get { return characterClass_; }
      set {
        characterClass_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerCharacter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerCharacter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BaseCharacter, other.BaseCharacter)) return false;
      if (!object.Equals(Equipment, other.Equipment)) return false;
      if(!inventory_.Equals(other.inventory_)) return false;
      if (!SkillLevels.Equals(other.SkillLevels)) return false;
      if (SessionId != other.SessionId) return false;
      if (CharacterClass != other.CharacterClass) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (baseCharacter_ != null) hash ^= BaseCharacter.GetHashCode();
      if (equipment_ != null) hash ^= Equipment.GetHashCode();
      hash ^= inventory_.GetHashCode();
      hash ^= SkillLevels.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (CharacterClass != global::RPG.GameServer.Protos.CharacterClass.Warrior) hash ^= CharacterClass.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (baseCharacter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseCharacter);
      }
      if (equipment_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Equipment);
      }
      inventory_.WriteTo(output, _repeated_inventory_codec);
      skillLevels_.WriteTo(output, _map_skillLevels_codec);
      if (SessionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SessionId);
      }
      if (CharacterClass != global::RPG.GameServer.Protos.CharacterClass.Warrior) {
        output.WriteRawTag(48);
        output.WriteEnum((int) CharacterClass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (baseCharacter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseCharacter);
      }
      if (equipment_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Equipment);
      }
      inventory_.WriteTo(ref output, _repeated_inventory_codec);
      skillLevels_.WriteTo(ref output, _map_skillLevels_codec);
      if (SessionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SessionId);
      }
      if (CharacterClass != global::RPG.GameServer.Protos.CharacterClass.Warrior) {
        output.WriteRawTag(48);
        output.WriteEnum((int) CharacterClass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (baseCharacter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseCharacter);
      }
      if (equipment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Equipment);
      }
      size += inventory_.CalculateSize(_repeated_inventory_codec);
      size += skillLevels_.CalculateSize(_map_skillLevels_codec);
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (CharacterClass != global::RPG.GameServer.Protos.CharacterClass.Warrior) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CharacterClass);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerCharacter other) {
      if (other == null) {
        return;
      }
      if (other.baseCharacter_ != null) {
        if (baseCharacter_ == null) {
          BaseCharacter = new global::RPG.GameServer.Protos.BaseCharacter();
        }
        BaseCharacter.MergeFrom(other.BaseCharacter);
      }
      if (other.equipment_ != null) {
        if (equipment_ == null) {
          Equipment = new global::RPG.GameServer.Protos.EquipmentSlots();
        }
        Equipment.MergeFrom(other.Equipment);
      }
      inventory_.Add(other.inventory_);
      skillLevels_.MergeFrom(other.skillLevels_);
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.CharacterClass != global::RPG.GameServer.Protos.CharacterClass.Warrior) {
        CharacterClass = other.CharacterClass;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (baseCharacter_ == null) {
              BaseCharacter = new global::RPG.GameServer.Protos.BaseCharacter();
            }
            input.ReadMessage(BaseCharacter);
            break;
          }
          case 18: {
            if (equipment_ == null) {
              Equipment = new global::RPG.GameServer.Protos.EquipmentSlots();
            }
            input.ReadMessage(Equipment);
            break;
          }
          case 26: {
            inventory_.AddEntriesFrom(input, _repeated_inventory_codec);
            break;
          }
          case 34: {
            skillLevels_.AddEntriesFrom(input, _map_skillLevels_codec);
            break;
          }
          case 42: {
            SessionId = input.ReadString();
            break;
          }
          case 48: {
            CharacterClass = (global::RPG.GameServer.Protos.CharacterClass) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (baseCharacter_ == null) {
              BaseCharacter = new global::RPG.GameServer.Protos.BaseCharacter();
            }
            input.ReadMessage(BaseCharacter);
            break;
          }
          case 18: {
            if (equipment_ == null) {
              Equipment = new global::RPG.GameServer.Protos.EquipmentSlots();
            }
            input.ReadMessage(Equipment);
            break;
          }
          case 26: {
            inventory_.AddEntriesFrom(ref input, _repeated_inventory_codec);
            break;
          }
          case 34: {
            skillLevels_.AddEntriesFrom(ref input, _map_skillLevels_codec);
            break;
          }
          case 42: {
            SessionId = input.ReadString();
            break;
          }
          case 48: {
            CharacterClass = (global::RPG.GameServer.Protos.CharacterClass) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CharacterRequest : pb::IMessage<CharacterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterRequest> _parser = new pb::MessageParser<CharacterRequest>(() => new CharacterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CharacterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterRequest(CharacterRequest other) : this() {
      character_ = other.character_ != null ? other.character_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterRequest Clone() {
      return new CharacterRequest(this);
    }

    /// <summary>Field number for the "character" field.</summary>
    public const int CharacterFieldNumber = 1;
    private global::RPG.GameServer.Protos.PlayerCharacter character_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.PlayerCharacter Character {
      get { return character_; }
      set {
        character_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CharacterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CharacterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Character, other.Character)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (character_ != null) hash ^= Character.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (character_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Character);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (character_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Character);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (character_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Character);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CharacterRequest other) {
      if (other == null) {
        return;
      }
      if (other.character_ != null) {
        if (character_ == null) {
          Character = new global::RPG.GameServer.Protos.PlayerCharacter();
        }
        Character.MergeFrom(other.Character);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (character_ == null) {
              Character = new global::RPG.GameServer.Protos.PlayerCharacter();
            }
            input.ReadMessage(Character);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (character_ == null) {
              Character = new global::RPG.GameServer.Protos.PlayerCharacter();
            }
            input.ReadMessage(Character);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CharacterIdRequest : pb::IMessage<CharacterIdRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterIdRequest> _parser = new pb::MessageParser<CharacterIdRequest>(() => new CharacterIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CharacterIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterIdRequest(CharacterIdRequest other) : this() {
      characterId_ = other.characterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterIdRequest Clone() {
      return new CharacterIdRequest(this);
    }

    /// <summary>Field number for the "characterId" field.</summary>
    public const int CharacterIdFieldNumber = 1;
    private string characterId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CharacterId {
      get { return characterId_; }
      set {
        characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CharacterIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CharacterIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CharacterId != other.CharacterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CharacterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CharacterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CharacterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CharacterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CharacterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CharacterIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.CharacterId.Length != 0) {
        CharacterId = other.CharacterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CharacterId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CharacterId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CharacterReply : pb::IMessage<CharacterReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterReply> _parser = new pb::MessageParser<CharacterReply>(() => new CharacterReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CharacterReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterReply(CharacterReply other) : this() {
      character_ = other.character_ != null ? other.character_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterReply Clone() {
      return new CharacterReply(this);
    }

    /// <summary>Field number for the "character" field.</summary>
    public const int CharacterFieldNumber = 1;
    private global::RPG.GameServer.Protos.PlayerCharacter character_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.PlayerCharacter Character {
      get { return character_; }
      set {
        character_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CharacterReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CharacterReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Character, other.Character)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (character_ != null) hash ^= Character.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (character_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Character);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (character_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Character);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (character_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Character);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CharacterReply other) {
      if (other == null) {
        return;
      }
      if (other.character_ != null) {
        if (character_ == null) {
          Character = new global::RPG.GameServer.Protos.PlayerCharacter();
        }
        Character.MergeFrom(other.Character);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (character_ == null) {
              Character = new global::RPG.GameServer.Protos.PlayerCharacter();
            }
            input.ReadMessage(Character);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (character_ == null) {
              Character = new global::RPG.GameServer.Protos.PlayerCharacter();
            }
            input.ReadMessage(Character);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CharacterIdReply : pb::IMessage<CharacterIdReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterIdReply> _parser = new pb::MessageParser<CharacterIdReply>(() => new CharacterIdReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CharacterIdReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterIdReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterIdReply(CharacterIdReply other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterIdReply Clone() {
      return new CharacterIdReply(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CharacterIdReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CharacterIdReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CharacterIdReply other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ProtobufSkill : pb::IMessage<ProtobufSkill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufSkill> _parser = new pb::MessageParser<ProtobufSkill>(() => new ProtobufSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufSkill(ProtobufSkill other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      type_ = other.type_;
      manaCost_ = other.manaCost_;
      cooldownSeconds_ = other.cooldownSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufSkill Clone() {
      return new ProtobufSkill(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::RPG.GameServer.Protos.SkillType type_ = global::RPG.GameServer.Protos.SkillType.MeleeAttack;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.SkillType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "manaCost" field.</summary>
    public const int ManaCostFieldNumber = 4;
    private int manaCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ManaCost {
      get { return manaCost_; }
      set {
        manaCost_ = value;
      }
    }

    /// <summary>Field number for the "cooldownSeconds" field.</summary>
    public const int CooldownSecondsFieldNumber = 5;
    private float cooldownSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CooldownSeconds {
      get { return cooldownSeconds_; }
      set {
        cooldownSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (ManaCost != other.ManaCost) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CooldownSeconds, other.CooldownSeconds)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::RPG.GameServer.Protos.SkillType.MeleeAttack) hash ^= Type.GetHashCode();
      if (ManaCost != 0) hash ^= ManaCost.GetHashCode();
      if (CooldownSeconds != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CooldownSeconds);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::RPG.GameServer.Protos.SkillType.MeleeAttack) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (ManaCost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ManaCost);
      }
      if (CooldownSeconds != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CooldownSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Type != global::RPG.GameServer.Protos.SkillType.MeleeAttack) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (ManaCost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ManaCost);
      }
      if (CooldownSeconds != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CooldownSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::RPG.GameServer.Protos.SkillType.MeleeAttack) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ManaCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ManaCost);
      }
      if (CooldownSeconds != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufSkill other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::RPG.GameServer.Protos.SkillType.MeleeAttack) {
        Type = other.Type;
      }
      if (other.ManaCost != 0) {
        ManaCost = other.ManaCost;
      }
      if (other.CooldownSeconds != 0F) {
        CooldownSeconds = other.CooldownSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::RPG.GameServer.Protos.SkillType) input.ReadEnum();
            break;
          }
          case 32: {
            ManaCost = input.ReadInt32();
            break;
          }
          case 45: {
            CooldownSeconds = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::RPG.GameServer.Protos.SkillType) input.ReadEnum();
            break;
          }
          case 32: {
            ManaCost = input.ReadInt32();
            break;
          }
          case 45: {
            CooldownSeconds = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ProtobufEquipmentSlots : pb::IMessage<ProtobufEquipmentSlots>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtobufEquipmentSlots> _parser = new pb::MessageParser<ProtobufEquipmentSlots>(() => new ProtobufEquipmentSlots());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtobufEquipmentSlots> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPG.GameServer.Protos.CharacterReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufEquipmentSlots() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufEquipmentSlots(ProtobufEquipmentSlots other) : this() {
      head_ = other.head_ != null ? other.head_.Clone() : null;
      chest_ = other.chest_ != null ? other.chest_.Clone() : null;
      weapon_ = other.weapon_ != null ? other.weapon_.Clone() : null;
      shield_ = other.shield_ != null ? other.shield_.Clone() : null;
      boots_ = other.boots_ != null ? other.boots_.Clone() : null;
      gloves_ = other.gloves_ != null ? other.gloves_.Clone() : null;
      rings_ = other.rings_.Clone();
      amulet_ = other.amulet_ != null ? other.amulet_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtobufEquipmentSlots Clone() {
      return new ProtobufEquipmentSlots(this);
    }

    /// <summary>Field number for the "head" field.</summary>
    public const int HeadFieldNumber = 1;
    private global::RPG.GameServer.Protos.Item head_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    /// <summary>Field number for the "chest" field.</summary>
    public const int ChestFieldNumber = 2;
    private global::RPG.GameServer.Protos.Item chest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Chest {
      get { return chest_; }
      set {
        chest_ = value;
      }
    }

    /// <summary>Field number for the "weapon" field.</summary>
    public const int WeaponFieldNumber = 3;
    private global::RPG.GameServer.Protos.Item weapon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Weapon {
      get { return weapon_; }
      set {
        weapon_ = value;
      }
    }

    /// <summary>Field number for the "shield" field.</summary>
    public const int ShieldFieldNumber = 4;
    private global::RPG.GameServer.Protos.Item shield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Shield {
      get { return shield_; }
      set {
        shield_ = value;
      }
    }

    /// <summary>Field number for the "boots" field.</summary>
    public const int BootsFieldNumber = 5;
    private global::RPG.GameServer.Protos.Item boots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Boots {
      get { return boots_; }
      set {
        boots_ = value;
      }
    }

    /// <summary>Field number for the "gloves" field.</summary>
    public const int GlovesFieldNumber = 6;
    private global::RPG.GameServer.Protos.Item gloves_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Gloves {
      get { return gloves_; }
      set {
        gloves_ = value;
      }
    }

    /// <summary>Field number for the "rings" field.</summary>
    public const int RingsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::RPG.GameServer.Protos.Item> _repeated_rings_codec
        = pb::FieldCodec.ForMessage(58, global::RPG.GameServer.Protos.Item.Parser);
    private readonly pbc::RepeatedField<global::RPG.GameServer.Protos.Item> rings_ = new pbc::RepeatedField<global::RPG.GameServer.Protos.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RPG.GameServer.Protos.Item> Rings {
      get { return rings_; }
    }

    /// <summary>Field number for the "amulet" field.</summary>
    public const int AmuletFieldNumber = 8;
    private global::RPG.GameServer.Protos.Item amulet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RPG.GameServer.Protos.Item Amulet {
      get { return amulet_; }
      set {
        amulet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtobufEquipmentSlots);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtobufEquipmentSlots other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Head, other.Head)) return false;
      if (!object.Equals(Chest, other.Chest)) return false;
      if (!object.Equals(Weapon, other.Weapon)) return false;
      if (!object.Equals(Shield, other.Shield)) return false;
      if (!object.Equals(Boots, other.Boots)) return false;
      if (!object.Equals(Gloves, other.Gloves)) return false;
      if(!rings_.Equals(other.rings_)) return false;
      if (!object.Equals(Amulet, other.Amulet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (head_ != null) hash ^= Head.GetHashCode();
      if (chest_ != null) hash ^= Chest.GetHashCode();
      if (weapon_ != null) hash ^= Weapon.GetHashCode();
      if (shield_ != null) hash ^= Shield.GetHashCode();
      if (boots_ != null) hash ^= Boots.GetHashCode();
      if (gloves_ != null) hash ^= Gloves.GetHashCode();
      hash ^= rings_.GetHashCode();
      if (amulet_ != null) hash ^= Amulet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (head_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Head);
      }
      if (chest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Chest);
      }
      if (weapon_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Weapon);
      }
      if (shield_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Shield);
      }
      if (boots_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Boots);
      }
      if (gloves_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Gloves);
      }
      rings_.WriteTo(output, _repeated_rings_codec);
      if (amulet_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Amulet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (head_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Head);
      }
      if (chest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Chest);
      }
      if (weapon_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Weapon);
      }
      if (shield_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Shield);
      }
      if (boots_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Boots);
      }
      if (gloves_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Gloves);
      }
      rings_.WriteTo(ref output, _repeated_rings_codec);
      if (amulet_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Amulet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (head_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Head);
      }
      if (chest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Chest);
      }
      if (weapon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weapon);
      }
      if (shield_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shield);
      }
      if (boots_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Boots);
      }
      if (gloves_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gloves);
      }
      size += rings_.CalculateSize(_repeated_rings_codec);
      if (amulet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amulet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtobufEquipmentSlots other) {
      if (other == null) {
        return;
      }
      if (other.head_ != null) {
        if (head_ == null) {
          Head = new global::RPG.GameServer.Protos.Item();
        }
        Head.MergeFrom(other.Head);
      }
      if (other.chest_ != null) {
        if (chest_ == null) {
          Chest = new global::RPG.GameServer.Protos.Item();
        }
        Chest.MergeFrom(other.Chest);
      }
      if (other.weapon_ != null) {
        if (weapon_ == null) {
          Weapon = new global::RPG.GameServer.Protos.Item();
        }
        Weapon.MergeFrom(other.Weapon);
      }
      if (other.shield_ != null) {
        if (shield_ == null) {
          Shield = new global::RPG.GameServer.Protos.Item();
        }
        Shield.MergeFrom(other.Shield);
      }
      if (other.boots_ != null) {
        if (boots_ == null) {
          Boots = new global::RPG.GameServer.Protos.Item();
        }
        Boots.MergeFrom(other.Boots);
      }
      if (other.gloves_ != null) {
        if (gloves_ == null) {
          Gloves = new global::RPG.GameServer.Protos.Item();
        }
        Gloves.MergeFrom(other.Gloves);
      }
      rings_.Add(other.rings_);
      if (other.amulet_ != null) {
        if (amulet_ == null) {
          Amulet = new global::RPG.GameServer.Protos.Item();
        }
        Amulet.MergeFrom(other.Amulet);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (head_ == null) {
              Head = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Head);
            break;
          }
          case 18: {
            if (chest_ == null) {
              Chest = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Chest);
            break;
          }
          case 26: {
            if (weapon_ == null) {
              Weapon = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 34: {
            if (shield_ == null) {
              Shield = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Shield);
            break;
          }
          case 42: {
            if (boots_ == null) {
              Boots = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Boots);
            break;
          }
          case 50: {
            if (gloves_ == null) {
              Gloves = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Gloves);
            break;
          }
          case 58: {
            rings_.AddEntriesFrom(input, _repeated_rings_codec);
            break;
          }
          case 66: {
            if (amulet_ == null) {
              Amulet = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Amulet);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (head_ == null) {
              Head = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Head);
            break;
          }
          case 18: {
            if (chest_ == null) {
              Chest = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Chest);
            break;
          }
          case 26: {
            if (weapon_ == null) {
              Weapon = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 34: {
            if (shield_ == null) {
              Shield = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Shield);
            break;
          }
          case 42: {
            if (boots_ == null) {
              Boots = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Boots);
            break;
          }
          case 50: {
            if (gloves_ == null) {
              Gloves = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Gloves);
            break;
          }
          case 58: {
            rings_.AddEntriesFrom(ref input, _repeated_rings_codec);
            break;
          }
          case 66: {
            if (amulet_ == null) {
              Amulet = new global::RPG.GameServer.Protos.Item();
            }
            input.ReadMessage(Amulet);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
